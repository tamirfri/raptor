apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: ''
    capabilities: Basic Install
    categories: AI/Machine Learning
    containerImage: controller:latest
    createdAt: '2022-06-30T00:00:00Z'
    description: Serverless Feature Engineering for Production
    repository: https://github.com/raptor-ml/raptor
    support: Raptor
  name: raptor.v0.0.0
  namespace: raptor-system
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: DataConnector is the Schema for the dataconnectors API
      displayName: DataConnector
      kind: DataConnector
      name: dataconnectors.k8s.raptor.ml
      resources:
      - kind: Deployment
        name: raptor-conn-<name>
        version: v1
      specDescriptors:
      - description: Config of the DataConnector
        displayName: Config
        path: config
      - description: Configuration value from secret
        displayName: Secret Key Ref
        path: config[0].secretKeyRef
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: Kind of the DataConnector
        displayName: Connector Kind
        path: kind
      - description: Replicas defines the number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
        displayName: Replicas
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: "Resources defines the required resources for a single container(underlying implementation) of this DataConnector. Notice that this is not applicable for every DataConnector, but only for those who implement an External Runner. \n More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"
        displayName: Resources
        path: resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      statusDescriptors:
      - description: Features includes a list of references for the Feature that uses this DataConnector
        displayName: Features
        path: features
      - displayName: Replicas
        path: replicas
      version: v1alpha1
    - description: Feature is the Schema for the features API
      displayName: ML Feature
      kind: Feature
      name: features.k8s.raptor.ml
      resources:
      - kind: Deployment
        name: raptor-controller-core
        version: v1
      specDescriptors:
      - description: 'Aggr defines an aggregation on top of the underlying feature-value. Aggregations will be calculated on time-of-request. Users can specify here multiple functions to calculate the aggregation. Valid values: - `count` - `min` - `mix` - `sum`` - `mean` (alias for `avg`) - `avg`'
        displayName: Aggregations
        path: aggr
      - description: Builder defines a building-block to use to build the feature-value
        displayName: Builder
        path: builder
      - description: DataConnector is a reference for the DataConnector that this Feature is associated with
        displayName: Data Connector
        path: connector
      - description: Name is unique within a namespace to reference a resource.
        displayName: Resource's Name
        path: connector.name
      - description: Namespace defines the space within which the resource name must be unique.
        displayName: Resource's Namespace
        path: connector.namespace
      - description: Freshness defines the age of a feature-value(time since the value has set) to consider as *fresh*. Fresh values doesn't require re-ingestion
        displayName: Freshness
        path: freshness
      - description: 'Primitive defines the type of the underlying feature-value that a Feature should respond with Valid values are: - `int` - `float` - `string` - `timestamp - `[]int` - `[]float` - `[]string` - `[]timestamp` - `headless`'
        displayName: Primitive Type
        path: primitive
      - description: Staleness defines the age of a feature-value(time since the value has set) to consider as *stale*. Stale values are not fit for usage, therefore will not be returned and will REQUIRE re-ingestion.
        displayName: Staleness
        path: staleness
      - description: Timeout defines the maximum ingestion time allowed to calculate the feature value.
        displayName: Timeout
        path: timeout
      statusDescriptors:
      - description: FQN is the Fully Qualified Name for the Feature
        displayName: FQN
        path: fqn
      version: v1alpha1
    - description: FeatureSet is the Schema for the featuresets API
      displayName: ML FeatureSet
      kind: FeatureSet
      name: featuresets.k8s.raptor.ml
      resources:
      - kind: Deployment
        name: raptor-controller-core
        version: v1
      specDescriptors:
      - description: Features is the list of feature FQNs that are enabled for a given feature set
        displayName: Features
        path: features
      - description: KeyFeature is the feature FQN that is used to align the rest of the features with it timestamp. If this is unset, the first feature in the list will be used.
        displayName: Key Feature FQN
        path: keyFeature
      - description: Timeout defines the maximum ingestion time allowed to calculate the feature value.
        displayName: Timeout
        path: timeout
      statusDescriptors:
      - description: FQN is the Fully Qualified Name for the FeatureSet
        displayName: FQN
        path: fqn
      version: v1alpha1
  description: |
    # Serverless Feature Engineering for Production
    RaptorML is a serverless framework that allows data-scientists to deploy ML Features to production without the hassle of the engineering overhead.

    Data Scientists can *focus* on the business logic, and the Raptor Kubernetes Operator take care of the engineering overhead
    (like caching, authentication, scale, etc).

    For more information, please visit [Raptor's docs](https://raptor.ml).

    ## Prerequisites
    - Kubernetes v1.18+
    - Redis server - to store the production data
    - A supported historical storage provider - currently support Snowflake and AWS S3

    ## How to install Raptor:
    Please create a `Subscription` resource with the dependencies configured. I.e:
    ```yaml
    apiVersion: v1
    kind: Secret
    metadata:
      name: raptor-providers-creds
      namespace: raptor-system
    data:
      REDIS: "my-redis.default.svc.cluster.local"
      AWS_ACCESS_KEY: ""
      AWS_SECRET_KEY: ""
      SNOWFLAKE_URI: <user>:<pass>@<account-id>/<db>/<schema>?warehouse=<warehouse-name>
    ---
    apiVersion: operators.coreos.com/v1alpha1
    kind: Subscription
    metadata:
      name: raptor
    spec:
      package: raptor
      channel: alpha
      config:
        env:
          - name: HISTORICAL_WRITER_PROVIDER
            value: "snowflake"
        envFrom:
          - secretRef:
              name: raptor-providers-credentials
    ```

    >> Notice: the example above creates a `Secret` resource inside the `raptor-system` namespace. Make sure to create it if it doesn't exist.
  displayName: Raptor
  icon:
  - base64data: 
    mediatype: image/svg+xml
  install:
    spec:
      deployments:
    strategy: ''
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - raptor
  - feature engineering
  - feature store
  - kubeflow
  - serverless
  - platform
  - machine learning
  - ML
  - DS
  - data science
  links:
  - name: Raptor
    url: https://raptor.ml
  maintainers:
  - email: almog.baku@gmail.com
    name: Almog Baku
  maturity: alpha
  minKubeVersion: 1.18.0
  provider:
    name: Raptor
    url: https://raptor.ml
  version: 0.0.0
